@startuml

title __OUTPUTS's Class Diagram__\n

  namespace jp.oist.abcvlib {
    namespace outputs {
      abstract class jp.oist.abcvlib.outputs.AbcvlibController {
          # setOutput()
          ~ getOutput()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.AbcvlibController.Output {
          + left : double
          + right : double
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.BalancePIDController {
          ~ PIDTimeSteps : long[]
          ~ PIDTimer : long[]
          ~ d_tilt : double
          ~ distanceL : double
          ~ distanceR : double
          ~ e_t : double
          ~ e_w : double
          ~ expWeight : double
          ~ i_tilt : double
          ~ int_e_t : double
          ~ lastUpdateTime : long
          ~ maxAbsTilt : double
          ~ maxTiltAngle : double
          ~ minTiltAngle : double
          ~ p_tilt : double
          ~ p_wheel : double
          ~ setPoint : double
          ~ speedL : double
          ~ speedR : double
          ~ thetaDeg : double
          ~ thetaDegDot : double
          ~ thetaDiff : double
          ~ timerCount : int
          ~ updateTimeStep : long
          ~ wheelCountL : double
          ~ wheelCountR : double
          - avgCount : int
          + BalancePIDController()
          + run()
          - linearController()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.CenterBlobController {
          - CENTER_COL : double
          - centroid : List<Point>
          - p_phi : double
          - phi : double
          + CenterBlobController()
          + getPhi()
          + run()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.FileOps {
          ~ saved : String
          + getFile()
          + isExternalStorageReadable()
          + isExternalStorageWritable()
          + readData()
          + savedata()
          + writeToFile()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.GrandController {
          - controllers : ArrayList<AbcvlibController>
          + addController()
          + run()
          ~ GrandController()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.MediaPlayerRunnable {
          - audioManager : AudioManager
          - audiofile : String
          - mediaPlayer : MediaPlayer
          + MediaPlayerRunnable()
          + run()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.Motion {
          - dutyCycleLeftWheel : int
          - dutyCycleRightWheel : int
          + Motion()
          + centerBlob()
          + getDutyCycleLeft()
          + getDutyCycleRight()
          + setWheelOutput()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.Outputs {
          # pidControllerThread : Thread
          - centerBlobControllerThread : Thread
          - controllers : ArrayList<AbcvlibController>
          - grandControllerThread : Thread
          - socketClientThread : Thread
          + Outputs()
          + setAudioFile()
          + setControls()
          + setPID()
          + setWheelOutput()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      interface jp.oist.abcvlib.outputs.OutputsInterface {
          {static} + controls : JSONObject
          {static} + fileOps : FileOps
          {abstract} + setAudioFile()
          {abstract} + setControls()
          {abstract} + setPID()
          {abstract} + setWheelOutput()
      }
    }
  }
  

  namespace jp.oist.abcvlib {
    namespace outputs {
      class jp.oist.abcvlib.outputs.SocketClient {
          + controls_S : JSONObject
          + inputs_S : JSONObject
          + readPermission : boolean
          + ready : boolean
          + socketMsgIn : JSONObject
          + writePermission : boolean
          ~ arrayIndex : int
          ~ bufferedReader : BufferedReader
          ~ bufferedWriter : BufferedWriter
          ~ currentTime : double
          ~ prevTime : double
          ~ pythonControlTimeSteps : float[]
          ~ pythonControlTimer : float[]
          ~ qvalueArray : JSONArray
          ~ timerCount : int
          ~ weightArray : JSONArray
          - line : String
          - serverIp : String
          - serverPort : int
          - socket : Socket
          + SocketClient()
          + connect()
          + getControlsFromServer()
          + run()
          + writeInputsToServer()
          - closeAll()
          - readControlData()
          - writeAndroidData()
      }
    }
  }
  

  jp.oist.abcvlib.outputs.AbcvlibController .up.|> java.lang.Runnable
  jp.oist.abcvlib.outputs.AbcvlibController o-- jp.oist.abcvlib.outputs.AbcvlibController.Output : output
  jp.oist.abcvlib.outputs.AbcvlibController +-down- jp.oist.abcvlib.outputs.AbcvlibController.Output
  jp.oist.abcvlib.outputs.BalancePIDController -up-|> jp.oist.abcvlib.outputs.AbcvlibController
  jp.oist.abcvlib.outputs.BalancePIDController o-- jp.oist.abcvlib.core.AbcvlibActivity : abcvlibActivity
  jp.oist.abcvlib.outputs.CenterBlobController -up-|> jp.oist.abcvlib.outputs.AbcvlibController
  jp.oist.abcvlib.outputs.CenterBlobController o-- jp.oist.abcvlib.core.AbcvlibActivity : abcvlibActivity
  jp.oist.abcvlib.outputs.GrandController -up-|> jp.oist.abcvlib.outputs.AbcvlibController
  jp.oist.abcvlib.outputs.GrandController o-- jp.oist.abcvlib.core.AbcvlibActivity : abcvlibActivity
  jp.oist.abcvlib.outputs.MediaPlayerRunnable .up.|> java.lang.Runnable
  jp.oist.abcvlib.outputs.MediaPlayerRunnable o-- jp.oist.abcvlib.core.AbcvlibActivity : abcvlibActivity
  jp.oist.abcvlib.outputs.Motion o-- jp.oist.abcvlib.core.AbcvlibActivity : abcvlibActivity
  jp.oist.abcvlib.outputs.Motion o-- jp.oist.abcvlib.inputs.MotionSensors : motionSensors
  jp.oist.abcvlib.outputs.Motion o-- jp.oist.abcvlib.inputs.QuadEncoders : quadEncoders
  jp.oist.abcvlib.outputs.Outputs .up.|> jp.oist.abcvlib.outputs.OutputsInterface
  jp.oist.abcvlib.outputs.Outputs o-- jp.oist.abcvlib.outputs.BalancePIDController : balancePIDController
  jp.oist.abcvlib.outputs.Outputs o-- jp.oist.abcvlib.outputs.Motion : motion
  jp.oist.abcvlib.outputs.Outputs o-- jp.oist.abcvlib.outputs.SocketClient : socketClient
  jp.oist.abcvlib.outputs.Outputs o-- jp.oist.abcvlib.outputs.CenterBlobController : centerBlobController
  jp.oist.abcvlib.outputs.Outputs o-- jp.oist.abcvlib.outputs.GrandController : grandController
  jp.oist.abcvlib.outputs.SocketClient .up.|> java.lang.Runnable
  jp.oist.abcvlib.outputs.SocketClient o-- jp.oist.abcvlib.core.AbcvlibActivity : abcvlibActivity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
