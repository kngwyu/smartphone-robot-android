@startuml

title __ABCVLIB's Class Diagram__\n

  namespace jp.oist.abcvlib {
    abstract class jp.oist.abcvlib.AbcvlibActivity {
        + appRunning : boolean
        + avgCount : int
        + loggerOn : boolean
        + timersOn : boolean
        + wheelPolaritySwap : boolean
        {static} # TAG : String
        # pidON : boolean
        - actionSelectorThread : Thread
        + onDestroy()
        + onPause()
        + onRequestPermissionsResult()
        + onResume()
        # createIOIOLooper()
        # initialzer()
        # initialzer()
        # onCreate()
        # onStart()
        # onStop()
    }
  }
  

  namespace jp.oist.abcvlib {
    class jp.oist.abcvlib.AbcvlibLooper {
        - DUTY_CYCLE_CONST : int
        - PWM_FREQ : int
        - buffer : int
        - dt : double
        - dutyCycleLeftWheelCurrent : int
        - dutyCycleLeftWheelNew : int
        - dutyCycleRightWheelCurrent : int
        - dutyCycleRightWheelNew : int
        - encoderALeftWheel : DigitalInput
        - encoderALeftWheelState : boolean
        - encoderALeftWheelStatePrevious : boolean
        - encoderARightWheel : DigitalInput
        - encoderARightWheelState : boolean
        - encoderARightWheelStatePrevious : boolean
        - encoderBLeftWheel : DigitalInput
        - encoderBLeftWheelState : boolean
        - encoderBLeftWheelStatePrevious : boolean
        - encoderBRightWheel : DigitalInput
        - encoderBRightWheelState : boolean
        - encoderBRightWheelStatePrevious : boolean
        - encoderCountLeftWheel : double[]
        - encoderCountLeftWheelLP : double[]
        - encoderCountRightWheel : double[]
        - encoderCountRightWheelLP : double[]
        - indexCurrent : int
        - indexPrevious : int
        - input1LeftWheelController : DigitalOutput
        - input1LeftWheelState : boolean
        - input1RightWheelController : DigitalOutput
        - input1RightWheelState : boolean
        - input2LeftWheelController : DigitalOutput
        - input2LeftWheelState : boolean
        - input2RightWheelController : DigitalOutput
        - input2RightWheelState : boolean
        - loggerOn : boolean
        - loopCount : int
        - lp_freq : double
        - newData : boolean
        - newDataLeft : boolean
        - newDataRight : boolean
        - pwmControllerLeftWheel : PwmOutput
        - pwmControllerRightWheel : PwmOutput
        - quadErrorCount : int
        - timeStamp : double[]
        - wheelPolaritySwap : boolean
        + AbcvlibLooper()
        + AbcvlibLooper()
        + disconnected()
        + getBuffer()
        + getDt()
        + getIndexCurrent()
        + getIndexPrevious()
        + getLoopCount()
        + getTimeStamp()
        + incompatible()
        + loop()
        + setup()
        - dutyCycleLimiter()
        - encoderAddSubtractCount()
        - getDutyCycle()
        - getEncoderCounts()
        - getEncoderStates()
        - getIn1In2()
        - indexUpdate()
        - timeStampUpdate()
        - updateQuadEncoders()
        - writeIoUpdates()
    }
  }
  

  jp.oist.abcvlib.AbcvlibActivity -up-|> ioio.lib.util.android.IOIOActivity
  jp.oist.abcvlib.AbcvlibActivity o-- jp.oist.abcvlib.learning.ActionDistribution : aD
  jp.oist.abcvlib.AbcvlibActivity o-- jp.oist.abcvlib.learning.ActionSelector : aS
  jp.oist.abcvlib.AbcvlibActivity o-- jp.oist.abcvlib.inputs.Inputs : inputs
  jp.oist.abcvlib.AbcvlibActivity o-- jp.oist.abcvlib.outputs.Outputs : outputs
  jp.oist.abcvlib.AbcvlibLooper -up-|> ioio.lib.util.BaseIOIOLooper
  jp.oist.abcvlib.AbcvlibLooper o-- jp.oist.abcvlib.AbcvlibActivity : abcvlibActivity


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
