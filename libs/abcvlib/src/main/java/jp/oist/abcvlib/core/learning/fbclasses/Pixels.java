// automatically generated by the FlatBuffers compiler, do not modify

package jp.oist.abcvlib.core.learning.fbclasses;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Pixels extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Pixels getRootAsPixels(ByteBuffer _bb) { return getRootAsPixels(_bb, new Pixels()); }
  public static Pixels getRootAsPixels(ByteBuffer _bb, Pixels obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Pixels __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int r(int j) { int o = __offset(4); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int rLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public IntVector rVector() { return rVector(new IntVector()); }
  public IntVector rVector(IntVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer rAsByteBuffer() { return __vector_as_bytebuffer(4, 4); }
  public ByteBuffer rInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 4); }
  public int g(int j) { int o = __offset(6); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int gLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public IntVector gVector() { return gVector(new IntVector()); }
  public IntVector gVector(IntVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer gAsByteBuffer() { return __vector_as_bytebuffer(6, 4); }
  public ByteBuffer gInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 4); }
  public int b(int j) { int o = __offset(8); return o != 0 ? bb.getInt(__vector(o) + j * 4) : 0; }
  public int bLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public IntVector bVector() { return bVector(new IntVector()); }
  public IntVector bVector(IntVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer bAsByteBuffer() { return __vector_as_bytebuffer(8, 4); }
  public ByteBuffer bInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 4); }

  public static int createPixels(FlatBufferBuilder builder,
      int rOffset,
      int gOffset,
      int bOffset) {
    builder.startTable(3);
    Pixels.addB(builder, bOffset);
    Pixels.addG(builder, gOffset);
    Pixels.addR(builder, rOffset);
    return Pixels.endPixels(builder);
  }

  public static void startPixels(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addR(FlatBufferBuilder builder, int rOffset) { builder.addOffset(0, rOffset, 0); }
  public static int createRVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startRVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addG(FlatBufferBuilder builder, int gOffset) { builder.addOffset(1, gOffset, 0); }
  public static int createGVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startGVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addB(FlatBufferBuilder builder, int bOffset) { builder.addOffset(2, bOffset, 0); }
  public static int createBVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addInt(data[i]); return builder.endVector(); }
  public static void startBVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endPixels(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Pixels get(int j) { return get(new Pixels(), j); }
    public Pixels get(Pixels obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

